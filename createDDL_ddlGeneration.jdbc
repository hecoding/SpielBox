CREATE TABLE clasificacion (
    ID INTEGER NOT NULL,
    dificultad VARCHAR(45) NOT NULL
);
ALTER TABLE clasificacion
  ADD PRIMARY KEY (ID);
  
 CREATE TABLE plataforma (
    ID INTEGER NOT NULL,
    tipo VARCHAR(45) NOT NULL
);
ALTER TABLE plataforma
  ADD PRIMARY KEY (ID);
  
CREATE TABLE programa_pago (
    ID INTEGER NOT NULL,
    nombre VARCHAR(45) NOT NULL,
    version FLOAT NOT NULL,
    requisitos VARCHAR(100) NOT NULL,
    funcionalidad VARCHAR(45) NOT NULL,
    precio_final FLOAT NOT NULL,
    clasificacion INTEGER NOT NULL
);
ALTER TABLE programa_pago
  ADD (
	PRIMARY KEY (ID),
    FOREIGN KEY (clasificacion)
        REFERENCES clasificacion (ID),
	CONSTRAINT restricc_version
		CHECK (version >= 0),
	CONSTRAINT restricc_precio_final
      CHECK (precio_final >= 0)
  );

CREATE TABLE programa_alquiler (
    ID INTEGER NOT NULL,
    nombre VARCHAR(45) NOT NULL,
    version FLOAT NOT NULL,
    requisitos VARCHAR(100) NOT NULL,
    funcionalidad VARCHAR(45) NOT NULL,
    precio_hora FLOAT NOT NULL,
    clasificacion INTEGER NOT NULL
);
ALTER TABLE programa_alquiler
  ADD (
	PRIMARY KEY (ID),
    FOREIGN KEY (clasificacion)
        REFERENCES clasificacion (ID),
	CONSTRAINT restricc_version
		CHECK (version >= 0),
	CONSTRAINT restricc_precio_hora
      CHECK (precio_hora >= 0)
  );

CREATE TABLE espacio_total ( 
	ID INTEGER NOT NULL,
	plataforma INTEGER NOT NULL,
	programa_pago INTEGER,
	programa_alquiler INTEGER,
	tamaÃ±o INTEGER NOT NULL
);
ALTER TABLE espacio_total
	ADD (
		PRIMARY KEY (ID),
		FOREIGN KEY (plataforma) REFERENCES plataforma (ID), 
		FOREIGN KEY (programa_pago) REFERENCES programa_pago(ID),
		FOREIGN KEY (programa_alquiler) REFERENCES programa_alquiler(ID),
        CONSTRAINT restricc_tamano
			CHECK (tamano >= 0)
	);